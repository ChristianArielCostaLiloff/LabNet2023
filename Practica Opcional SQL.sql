-- 1
USE PracticaSQL
SELECT ID, LAST_NAME, HIRE_DATE, SALARY FROM TEST.EMPLOYEES

-- 2, 3
USE PracticaSQL
SELECT ID, LAST_NAME, HIRE_DATE, SALARY * 12 AS SALARY_ANNUALLY FROM TEST.EMPLOYEES

-- 4
USE PracticaSQL
SELECT ID, LAST_NAME + '||' + LAST_NAME AS FULL_NAME, HIRE_DATE, SALARY * 12 AS SALARY_ANNUALLY FROM TEST.EMPLOYEES

-- 5
-- a
USE PracticaSQL
SELECT DEPARTMENT_ID 
FROM TEST.EMPLOYEES
ORDER BY DEPARTMENT_ID ASC

-- b
USE PracticaSQL
SELECT DISTINCT DEPARTMENT_ID 
FROM TEST.EMPLOYEES
ORDER BY DEPARTMENT_ID ASC

-- 6
USE PracticaSQL
SELECT ID, FIRST_NAME, LAST_NAME, SALARY 
FROM TEST.EMPLOYEES
WHERE SALARY < 2000
ORDER BY SALARY ASC

-- 7
USE PracticaSQL
SELECT ID, FIRST_NAME, LAST_NAME, SALARY 
FROM TEST.EMPLOYEES
WHERE SALARY BETWEEN 1800 AND 3000
ORDER BY SALARY ASC

-- 8
USE PracticaSQL
SELECT ID, FIRST_NAME, LAST_NAME, SALARY 
FROM TEST.EMPLOYEES
WHERE DEPARTMENT_ID IN (10, 30, 31)
ORDER BY SALARY ASC

-- 9
USE PracticaSQL
SELECT ID, FIRST_NAME, LAST_NAME 
FROM TEST.EMPLOYEES
WHERE LAST_NAME LIKE 'F%'
ORDER BY LAST_NAME ASC

-- 10
-- a
USE PracticaSQL
SELECT ID, FIRST_NAME, LAST_NAME, JOB_ID 
FROM TEST.EMPLOYEES
WHERE JOB_ID IS NULL

-- b
USE PracticaSQL
SELECT ID, FIRST_NAME, LAST_NAME, JOB_ID 
FROM TEST.EMPLOYEES
WHERE JOB_ID IS NOT NULL
ORDER BY JOB_ID ASC

-- 11, 12
-- Sin los parentesis se seleccionan los empleados que tengan JOB_ID = 'AD_CTB' y los empleados con JOB_ID = 'FQ_GRT' que tengan SALARY > 1900
USE PracticaSQL
SELECT ID, FIRST_NAME, LAST_NAME, SALARY, JOB_ID
FROM TEST.EMPLOYEES
WHERE (JOB_ID = 'AD_CTB' OR JOB_ID = 'FQ_GRT') AND SALARY > 1900
ORDER BY JOB_ID ASC

-- 13
USE PracticaSQL
SELECT ID, FIRST_NAME, LAST_NAME, HIRE_DATE
FROM TEST.EMPLOYEES
ORDER BY HIRE_DATE ASC

-- 14
USE PracticaSQL
SELECT ID, FIRST_NAME, LAST_NAME, HIRE_DATE
FROM TEST.EMPLOYEES
ORDER BY HIRE_DATE DESC, LAST_NAME ASC

-- 15, 16
USE PracticaSQL
SELECT ID, LAST_NAME, HIRE_DATE, SALARY * 12 AS SALARY_ANNUALLY
FROM TEST.EMPLOYEES
ORDER BY SALARY_ANNUALLY ASC

-- 17
USE PracticaSQL
SELECT e.ID, e.FIRST_NAME, e.LAST_NAME, e.DEPARTMENT_ID, d.ID, d.DEPARTMENT_DESCRIPTION
FROM TEST.EMPLOYEES e
INNER JOIN TEST.DEPARTMENTS d ON e.DEPARTMENT_ID = d.ID
ORDER BY e.DEPARTMENT_ID ASC

-- 18
USE PracticaSQL
SELECT e.ID, e.FIRST_NAME, e.LAST_NAME, e.DEPARTMENT_ID, d.ID, d.DEPARTMENT_NAME, d.DEPARTMENT_DESCRIPTION
FROM TEST.EMPLOYEES e
LEFT JOIN TEST.DEPARTMENTS d ON e.DEPARTMENT_ID = d.ID 
ORDER BY e.DEPARTMENT_ID ASC

-- 19
USE PracticaSQL
SELECT e.ID, e.FIRST_NAME, e.LAST_NAME, e.DEPARTMENT_ID, d.ID, d.DEPARTMENT_NAME, d.DEPARTMENT_DESCRIPTION
FROM TEST.EMPLOYEES e
RIGHT JOIN TEST.DEPARTMENTS d ON e.DEPARTMENT_ID = d.ID 
ORDER BY e.DEPARTMENT_ID ASC

-- 20
USE PracticaSQL
SELECT 
	A.ID, 
	A.FIRST_NAME, 
	A.LAST_NAME, 
	A.MANAGER_ID,
	B.FIRST_NAME AS MANAGER_FIRST_NAME, 
	B.LAST_NAME AS MANAGER_LAST_NAME
FROM TEST.EMPLOYEES A, TEST.EMPLOYEES B
WHERE A.MANAGER_ID = B.ID
ORDER BY A.MANAGER_ID ASC

-- 21
USE PracticaSQL
SELECT 
	MIN(SALARY) AS SALARY_MINIMUM,
	MAX(SALARY) AS SALARY_MAXIMUM,
	AVG(SALARY) AS SALARY_AVERAGE,
	SUM(SALARY) AS SALARY_TOTAL
FROM TEST.EMPLOYEES

-- 22 MIN, MAX, AVG, SUM de fechas

-- 23 
USE PracticaSQL
SELECT DEPARTMENT_ID, COUNT(*)
FROM TEST.EMPLOYEES
GROUP BY DEPARTMENT_ID

-- 24
USE PracticaSQL
SELECT DEPARTMENT_ID, JOB_ID, COUNT(*)
FROM TEST.EMPLOYEES
GROUP BY JOB_ID, DEPARTMENT_ID

-- 25
USE PracticaSQL
SELECT DEPARTMENT_ID, AVG(SALARY)
FROM TEST.EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) < 1200

-- 26
-- Como ID no es Identity Column hay que darle un valor
USE PracticaSQL
INSERT INTO TEST.EMPLOYEES(
	ID,
	FIRST_NAME, 
	LAST_NAME, 
	SALARY, 
	DEPARTMENT_ID, 
	JOB_ID, 
	HIRE_DATE, 
	MANAGER_ID
	)
VALUES (
	100,
	'Thomas',
	'A. Anderson',
	4500,
	'10',
	'FQ_GRT',
	'19000101 00:00:00',
	10
	)

-- 27
USE PracticaSQL
INSERT INTO TEST.EMPLOYEES(
	ID,
	FIRST_NAME, 
	LAST_NAME, 
	HIRE_DATE
	)
VALUES (
	101,
	'Agent',
	'Smith',
	'19000101 00:00:00'
	)

-- 28
USE PracticaSQL
SELECT COLUMN_NAME AS REQUIRED_FIELDS
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'EMPLOYEES' AND IS_NULLABLE = 'NO'

-- 29
USE PracticaSQL
INSERT INTO TEST.EMPLOYEES(
	ID,
	FIRST_NAME, 
	LAST_NAME, 
	SALARY, 
	DEPARTMENT_ID, 
	JOB_ID, 
	HIRE_DATE, 
	MANAGER_ID
	)
SELECT
	ID = 102,
	FIRST_NAME = 'Adolfo', 
	LAST_NAME, 
	SALARY + 200, 
	DEPARTMENT_ID, 
	JOB_ID, 
	HIRE_DATE, 
	MANAGER_ID = NULL
FROM TEST.EMPLOYEES
WHERE FIRST_NAME = 'Gustavo' AND LAST_NAME = 'Boulette'

-- 30 
USE PracticaSQL
UPDATE TEST.EMPLOYEES
SET SALARY = 1100
WHERE ID = 10

-- 30.1
USE PracticaSQL
UPDATE TEST.EMPLOYEES
SET SALARY += SALARY*0.1
WHERE DEPARTMENT_ID = 40




